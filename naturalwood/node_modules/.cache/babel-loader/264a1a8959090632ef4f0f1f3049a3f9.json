{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var cartSlice=createSlice({name:\"cart\",initialState:{products:[],quantity:0,total:0},reducers:{addProduct:function addProduct(state,action){state.quantity+=1;state.products.push(action.payload);state.total+=action.payload.price*action.payload.quantity;},deleteProductStart:function deleteProductStart(state){state.isFetching=true;state.error=false;},deleteProductSuccess:function deleteProductSuccess(state,action){state.quantity-=1;state.total-=action.payload.price*action.payload.quantity;state.products.splice(state.products.findIndex(function(item){return item._id===action.payload;}),1);},deleteProductFailure:function deleteProductFailure(state){state.isFetching=false;state.error=true;},deleteAllProductStart:function deleteAllProductStart(state){state.isFetching=true;state.error=false;},deleteAllProductSuccess:function deleteAllProductSuccess(state,action){state.quantity=0;state.total=0;state.products=[];},deleteAllProductFailure:function deleteAllProductFailure(state){state.isFetching=false;state.error=true;}}});var _cartSlice$actions=cartSlice.actions,addProduct=_cartSlice$actions.addProduct,deleteProductSuccess=_cartSlice$actions.deleteProductSuccess,deleteProductStart=_cartSlice$actions.deleteProductStart,deleteProductFailure=_cartSlice$actions.deleteProductFailure,deleteAllProductSuccess=_cartSlice$actions.deleteAllProductSuccess,deleteAllProductStart=_cartSlice$actions.deleteAllProductStart,deleteAllProductFailure=_cartSlice$actions.deleteAllProductFailure;export{addProduct,deleteProductSuccess,deleteProductStart,deleteProductFailure,deleteAllProductSuccess,deleteAllProductStart,deleteAllProductFailure};export default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/redux/cartRedux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","price","deleteProductStart","isFetching","error","deleteProductSuccess","splice","findIndex","item","_id","deleteProductFailure","deleteAllProductStart","deleteAllProductSuccess","deleteAllProductFailure","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAGA,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CAC1BE,IAAI,CAAC,MADqB,CAE1BC,YAAY,CAAC,CACTC,QAAQ,CAAC,EADA,CAETC,QAAQ,CAAC,CAFA,CAGTC,KAAK,CAAC,CAHG,CAFa,CAO1BC,QAAQ,CAAC,CACLC,UAAU,CAAC,oBAACC,KAAD,CAAQC,MAAR,CAAiB,CACxBD,KAAK,CAACJ,QAAN,EAAgB,CAAhB,CACAI,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B,EACAH,KAAK,CAACH,KAAN,EAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAuBH,MAAM,CAACE,OAAP,CAAeP,QAArD,CAEH,CANI,CASLS,kBAAkB,CAAE,4BAACL,KAAD,CAAW,CAC3BA,KAAK,CAACM,UAAN,CAAmB,IAAnB,CACAN,KAAK,CAACO,KAAN,CAAc,KAAd,CACD,CAZE,CAaHC,oBAAoB,CAAE,8BAACR,KAAD,CAAQC,MAAR,CAAmB,CACzCD,KAAK,CAACJ,QAAN,EAAgB,CAAhB,CACAI,KAAK,CAACH,KAAN,EAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAsBH,MAAM,CAACE,OAAP,CAAeP,QAApD,CACEI,KAAK,CAACL,QAAN,CAAec,MAAf,CACET,KAAK,CAACL,QAAN,CAAee,SAAf,CAAyB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaX,MAAM,CAACE,OAA9B,EAAzB,CADF,CAEE,CAFF,EAID,CApBE,CAqBHU,oBAAoB,CAAE,8BAACb,KAAD,CAAW,CAC/BA,KAAK,CAACM,UAAN,CAAmB,KAAnB,CACAN,KAAK,CAACO,KAAN,CAAc,IAAd,CACD,CAxBE,CAyBHO,qBAAqB,CAAE,+BAACd,KAAD,CAAW,CAChCA,KAAK,CAACM,UAAN,CAAmB,IAAnB,CACAN,KAAK,CAACO,KAAN,CAAc,KAAd,CACD,CA5BE,CA6BHQ,uBAAuB,CAAE,iCAACf,KAAD,CAAQC,MAAR,CAAmB,CAC5CD,KAAK,CAACJ,QAAN,CAAgB,CAAhB,CACAI,KAAK,CAACH,KAAN,CAAa,CAAb,CACEG,KAAK,CAACL,QAAN,CAAe,EAAf,CAED,CAlCE,CAmCHqB,uBAAuB,CAAE,iCAAChB,KAAD,CAAW,CAClCA,KAAK,CAACM,UAAN,CAAmB,KAAnB,CACAN,KAAK,CAACO,KAAN,CAAc,IAAd,CACD,CAtCE,CAPiB,CAAD,CAA7B,CAgDO,uBAA0Jf,SAAS,CAACyB,OAApK,CAAOlB,UAAP,oBAAOA,UAAP,CAAoBS,oBAApB,oBAAoBA,oBAApB,CAAyCH,kBAAzC,oBAAyCA,kBAAzC,CAA4DQ,oBAA5D,oBAA4DA,oBAA5D,CAAiFE,uBAAjF,oBAAiFA,uBAAjF,CAAyGD,qBAAzG,oBAAyGA,qBAAzG,CAA+HE,uBAA/H,oBAA+HA,uBAA/H,C,sJACP,cAAexB,CAAAA,SAAS,CAAC0B,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:\"cart\",\r\n    initialState:{\r\n        products:[],\r\n        quantity:0,\r\n        total:0,\r\n    },\r\n    reducers:{\r\n        addProduct:(state ,action)=>{\r\n            state.quantity+=1;\r\n            state.products.push(action.payload);\r\n            state.total += action.payload.price * action.payload.quantity;\r\n\r\n        },\r\n   \r\n \r\n        deleteProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n          },\r\n          deleteProductSuccess: (state, action) => {\r\n          state.quantity-=1;\r\n          state.total -= action.payload.price *action.payload.quantity;\r\n            state.products.splice(\r\n              state.products.findIndex((item) => item._id === action.payload),\r\n              1\r\n            );\r\n          },\r\n          deleteProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n          },\r\n          deleteAllProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n          },\r\n          deleteAllProductSuccess: (state, action) => {\r\n          state.quantity =0;\r\n          state.total= 0;\r\n            state.products=[];\r\n           \r\n          },\r\n          deleteAllProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n          },\r\n  }\r\n});\r\nexport const {addProduct , deleteProductSuccess,deleteProductStart,deleteProductFailure,deleteAllProductSuccess,deleteAllProductStart,deleteAllProductFailure} = cartSlice.actions;\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}