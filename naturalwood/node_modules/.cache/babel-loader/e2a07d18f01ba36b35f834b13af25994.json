{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.quantity += 1;\n      state.products.push(action.payload);\n      state.total += action.payload.price * action.payload.quantity;\n    },\n    deleteProductStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteProductSuccess: (state, action) => {\n      state.quantity -= 1;\n      state.total -= action.payload.price * action.payload.quantity;\n      state.products.splice(state.products.findIndex(item => item._id === action.payload), 1);\n    },\n    deleteProductFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    deleteAllProductStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteAllProductSuccess: (state, action) => {\n      state.quantity = 0;\n      state.total = 0;\n      state.products = [];\n    },\n    deleteAllProductFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  addProduct,\n  deleteProductSuccess,\n  deleteProductStart,\n  deleteProductFailure,\n  deleteAllProductSuccess,\n  deleteAllProductStart,\n  deleteAllProductFailure\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/redux/cartRedux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","price","deleteProductStart","isFetching","error","deleteProductSuccess","splice","findIndex","item","_id","deleteProductFailure","deleteAllProductStart","deleteAllProductSuccess","deleteAllProductFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAC,EADA;AAETC,IAAAA,QAAQ,EAAC,CAFA;AAGTC,IAAAA,KAAK,EAAC;AAHG,GAFa;AAO1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACxBD,MAAAA,KAAK,CAACJ,QAAN,IAAgB,CAAhB;AACAI,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACAH,MAAAA,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAuBH,MAAM,CAACE,OAAP,CAAeP,QAArD;AAEH,KANI;AASLS,IAAAA,kBAAkB,EAAGL,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACM,UAAN,GAAmB,IAAnB;AACAN,MAAAA,KAAK,CAACO,KAAN,GAAc,KAAd;AACD,KAZE;AAaHC,IAAAA,oBAAoB,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACJ,QAAN,IAAgB,CAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAsBH,MAAM,CAACE,OAAP,CAAeP,QAApD;AACEI,MAAAA,KAAK,CAACL,QAAN,CAAec,MAAf,CACET,KAAK,CAACL,QAAN,CAAee,SAAf,CAA0BC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACE,OAAvD,CADF,EAEE,CAFF;AAID,KApBE;AAqBHU,IAAAA,oBAAoB,EAAGb,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACM,UAAN,GAAmB,KAAnB;AACAN,MAAAA,KAAK,CAACO,KAAN,GAAc,IAAd;AACD,KAxBE;AAyBHO,IAAAA,qBAAqB,EAAGd,KAAD,IAAW;AAChCA,MAAAA,KAAK,CAACM,UAAN,GAAmB,IAAnB;AACAN,MAAAA,KAAK,CAACO,KAAN,GAAc,KAAd;AACD,KA5BE;AA6BHQ,IAAAA,uBAAuB,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;AAC5CD,MAAAA,KAAK,CAACJ,QAAN,GAAgB,CAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAa,CAAb;AACEG,MAAAA,KAAK,CAACL,QAAN,GAAe,EAAf;AAED,KAlCE;AAmCHqB,IAAAA,uBAAuB,EAAGhB,KAAD,IAAW;AAClCA,MAAAA,KAAK,CAACM,UAAN,GAAmB,KAAnB;AACAN,MAAAA,KAAK,CAACO,KAAN,GAAc,IAAd;AACD;AAtCE;AAPiB,CAAD,CAA7B;AAgDA,OAAO,MAAM;AAACR,EAAAA,UAAD;AAAcS,EAAAA,oBAAd;AAAmCH,EAAAA,kBAAnC;AAAsDQ,EAAAA,oBAAtD;AAA2EE,EAAAA,uBAA3E;AAAmGD,EAAAA,qBAAnG;AAAyHE,EAAAA;AAAzH,IAAoJxB,SAAS,CAACyB,OAApK;AACP,eAAezB,SAAS,CAAC0B,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:\"cart\",\r\n    initialState:{\r\n        products:[],\r\n        quantity:0,\r\n        total:0,\r\n    },\r\n    reducers:{\r\n        addProduct:(state ,action)=>{\r\n            state.quantity+=1;\r\n            state.products.push(action.payload);\r\n            state.total += action.payload.price * action.payload.quantity;\r\n\r\n        },\r\n   \r\n \r\n        deleteProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n          },\r\n          deleteProductSuccess: (state, action) => {\r\n          state.quantity-=1;\r\n          state.total -= action.payload.price *action.payload.quantity;\r\n            state.products.splice(\r\n              state.products.findIndex((item) => item._id === action.payload),\r\n              1\r\n            );\r\n          },\r\n          deleteProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n          },\r\n          deleteAllProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n          },\r\n          deleteAllProductSuccess: (state, action) => {\r\n          state.quantity =0;\r\n          state.total= 0;\r\n            state.products=[];\r\n           \r\n          },\r\n          deleteAllProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n          },\r\n  }\r\n});\r\nexport const {addProduct , deleteProductSuccess,deleteProductStart,deleteProductFailure,deleteAllProductSuccess,deleteAllProductStart,deleteAllProductFailure} = cartSlice.actions;\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}