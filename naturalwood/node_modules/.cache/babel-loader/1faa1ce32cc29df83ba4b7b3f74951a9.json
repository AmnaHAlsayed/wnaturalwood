{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isLoggedIn: null,\n    isFetching: false,\n    erorr: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoggedIn = true;\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailuer: state => {\n      state.isLoggedIn = false;\n      state.isFetching = false;\n      state.erorr = true;\n    }\n  },\n  logoutStart: state => {\n    state.isFetching = true;\n    state.error = false;\n  },\n  logoutSuccess: (state, action) => {\n    state.isFetching = false;\n    state.currentUser.splice(state.currentUser.findIndex(user => user._id === action.payload), 1);\n  },\n  logoutFailure: state => {\n    state.isFetching = false;\n    state.error = true;\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailuer,\n  logoutStart,\n  logoutSuccess,\n  logoutFailure\n} = userSlice.actions;\nexport default userSlice.reducer;\nexport const usersSelector = state => state.user;\nexport const userSelector = state => state.user.currentUser; //export const currentSelector =userSelector((state)=> state.user.currentUser);","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isLoggedIn","isFetching","erorr","reducers","loginStart","state","loginSuccess","action","payload","loginFailuer","logoutStart","error","logoutSuccess","splice","findIndex","user","_id","logoutFailure","actions","reducer","usersSelector","userSelector"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAC,IADH;AAETC,IAAAA,UAAU,EAAC,IAFF;AAGTC,IAAAA,UAAU,EAAC,KAHF;AAITC,IAAAA,KAAK,EAAC;AAJG,GAFa;AAQ1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAEC,KAAD,IAAU;AAACA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AAA0B,KAD3C;AAELK,IAAAA,YAAY,EAAC,CAACD,KAAD,EAAOE,MAAP,KAAgB;AACzBF,MAAAA,KAAK,CAACL,UAAN,GAAkB,IAAlB;AACAK,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AAEAI,MAAAA,KAAK,CAACN,WAAN,GAAkBQ,MAAM,CAACC,OAAzB;AACH,KAPI;AAQLC,IAAAA,YAAY,EAAEJ,KAAD,IAAS;AAClBA,MAAAA,KAAK,CAACL,UAAN,GAAkB,KAAlB;AACAK,MAAAA,KAAK,CAACJ,UAAN,GAAkB,KAAlB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACH;AAZI,GARiB;AAsB1BQ,EAAAA,WAAW,EAAGL,KAAD,IAAW;AACpBA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACAI,IAAAA,KAAK,CAACM,KAAN,GAAc,KAAd;AACD,GAzBuB;AA0BxBC,EAAAA,aAAa,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;AAChCF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACN,WAAN,CAAkBc,MAAlB,CACER,KAAK,CAACN,WAAN,CAAkBe,SAAlB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACC,OAA1D,CADF,EAEE,CAFF;AAID,GAhCuB;AAiCxBS,EAAAA,aAAa,EAAGZ,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACD;AApCuB,CAAD,CAA7B;AAsCA,OAAO,MAAM;AAACP,EAAAA,UAAD;AAAaE,EAAAA,YAAb;AAA2BG,EAAAA,YAA3B;AAAyCC,EAAAA,WAAzC;AAAsDE,EAAAA,aAAtD;AAAoEK,EAAAA;AAApE,IAAqFrB,SAAS,CAACsB,OAArG;AACP,eAAetB,SAAS,CAACuB,OAAzB;AACA,OAAO,MAAMC,aAAa,GAAIf,KAAD,IAAWA,KAAK,CAACU,IAAvC;AACP,OAAO,MAAMM,YAAY,GAAIhB,KAAD,IAAWA,KAAK,CAACU,IAAN,CAAWhB,WAA3C,C,CACP","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState:{\r\n        currentUser:null,\r\n        isLoggedIn:null,\r\n        isFetching:false,\r\n        erorr:false,\r\n    },\r\n    reducers:{\r\n        loginStart:(state )=>{state.isFetching = true  },\r\n        loginSuccess:(state,action)=>{\r\n            state.isLoggedIn =true\r\n            state.isFetching=false;\r\n\r\n            state.currentUser=action.payload\r\n        },\r\n        loginFailuer:(state)=>{\r\n            state.isLoggedIn =false;\r\n            state.isFetching= false;\r\n            state.erorr = true;\r\n        }\r\n    },\r\n    logoutStart: (state) => {\r\n        state.isFetching = true;\r\n        state.error = false;\r\n      },\r\n      logoutSuccess: (state, action) => {\r\n        state.isFetching = false;\r\n        state.currentUser.splice(\r\n          state.currentUser.findIndex((user) => user._id === action.payload),\r\n          1\r\n        );\r\n      },\r\n      logoutFailure: (state) => {\r\n        state.isFetching = false;\r\n        state.error = true;\r\n      }\r\n});\r\nexport const {loginStart ,loginSuccess ,loginFailuer, logoutStart, logoutSuccess,logoutFailure} = userSlice.actions;\r\nexport default userSlice.reducer;\r\nexport const usersSelector = (state )=> state.user;\r\nexport const userSelector = (state )=> state.user.currentUser;\r\n//export const currentSelector =userSelector((state)=> state.user.currentUser);"]},"metadata":{},"sourceType":"module"}