{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    erorr: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailuer: state => {\n      state.isFetching = false;\n      state.erorr = true;\n    },\n    logout: state => {\n      state.currentUser = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailuer,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;\nexport const usersSelector = state => state.user;\nexport const userSelector = state => state.user.currentUser; //export const currentSelector =userSelector((state)=> state.user.currentUser);","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","erorr","reducers","loginStart","state","loginSuccess","action","payload","loginFailuer","logout","actions","reducer","usersSelector","user","userSelector"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAC,IADH;AAETC,IAAAA,UAAU,EAAC,KAFF;AAGTC,IAAAA,KAAK,EAAC;AAHG,GAFa;AAO1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAEC,KAAD,IAAU;AAACA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AAAyB,KAD1C;AAELK,IAAAA,YAAY,EAAC,CAACD,KAAD,EAAOE,MAAP,KAAgB;AACzBF,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBO,MAAM,CAACC,OAAzB;AACH,KALI;AAMLC,IAAAA,YAAY,EAAEJ,KAAD,IAAS;AAClBA,MAAAA,KAAK,CAACJ,UAAN,GAAkB,KAAlB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACH,KATI;AAWTQ,IAAAA,MAAM,EAAGL,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACL,WAAN,GAAkB,IAAlB;AACG;AAbM;AAPiB,CAAD,CAA7B;AAwBA,OAAO,MAAM;AAACI,EAAAA,UAAD;AAAaE,EAAAA,YAAb;AAA2BG,EAAAA,YAA3B;AAAyCC,EAAAA;AAAzC,IAAmDb,SAAS,CAACc,OAAnE;AACP,eAAed,SAAS,CAACe,OAAzB;AACA,OAAO,MAAMC,aAAa,GAAIR,KAAD,IAAWA,KAAK,CAACS,IAAvC;AACP,OAAO,MAAMC,YAAY,GAAIV,KAAD,IAAWA,KAAK,CAACS,IAAN,CAAWd,WAA3C,C,CACP","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState:{\r\n        currentUser:null,\r\n        isFetching:false,\r\n        erorr:false,\r\n    },\r\n    reducers:{\r\n        loginStart:(state )=>{state.isFetching = true },\r\n        loginSuccess:(state,action)=>{\r\n            state.isFetching=false;\r\n            state.currentUser=action.payload\r\n        },\r\n        loginFailuer:(state)=>{\r\n            state.isFetching= false;\r\n            state.erorr = true;\r\n        }\r\n    ,\r\n    logout: (state) => {\r\n    state.currentUser=null\r\n      },\r\n  }\r\n      }\r\n);\r\nexport const {loginStart ,loginSuccess ,loginFailuer, logout} = userSlice.actions;\r\nexport default userSlice.reducer;\r\nexport const usersSelector = (state )=> state.user;\r\nexport const userSelector = (state )=> state.user.currentUser;\r\n//export const currentSelector =userSelector((state)=> state.user.currentUser);"]},"metadata":{},"sourceType":"module"}