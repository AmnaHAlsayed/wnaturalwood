{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\NaturalWood\\\\naturalwood\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Cart from './Pages/Cart';\nimport Hom from './Pages/Hom';\nimport Login from './Pages/Login';\nimport Product from './Pages/Product';\nimport ProductList from './Pages/ProductList';\nimport Register from './Pages/Register';\nimport Announcement from './shared/components/Announcement';\nimport Footer from './shared/components/Footer';\nimport Navbar from './shared/components/Navbar';\nimport Success from './Pages/Success';\nimport { useSelector } from 'react-redux';\nimport { userSelector } from './redux/userRedux';\nimport Auth from './Pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport Logout from './Pages/Logout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []); // const user = false;\n  //   const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //   const login = useCallback(() => {\n  //     setIsLoggedIn(true);\n  //   }, []);\n  //   const logout = useCallback(() => {\n  //     setIsLoggedIn(false);\n  //   }, []);\n  //   let routes;\n  //   if (isLoggedIn) {\n  //     routes = (\n  //       <Switch>\n  //         <Route path=\"/\" exact>\n  //           <Hom />\n  //         </Route>\n  //         <Route path=\"/product\" exact>  <Product /></Route>\n  //         <Route path=\"/cart\" exact>  < Cart/></Route>\n  //     <Route path=\"/products/:category\" exact>  <ProductList /></Route>\n  //      <Route path=\"/products\"><ProductList/></Route>\n  //      <Route path=\"/product/:id\" exact>  <Product /></Route>\n  //         <Redirect to=\"/\" />\n  //       </Switch>\n  //     );\n  //   } else {\n  //     routes = (\n  //       <Switch>\n  //         <Route path=\"/\" exact>\n  //           <Hom />\n  //         </Route>\n  //         <Route path=\"/auth\">\n  //           <Auth />\n  //         </Route>\n  //         <Redirect to=\"/auth\" />\n  //       </Switch>\n  //     );\n  //   }\n  //   return (\n  //     <AuthContext.Provider\n  //       value={{ isLoggedIn: isLoggedIn, login: login, logout: logout }}\n  //     >\n  //       <Router>\n  //       <Announcement/>\n  //     <Navbar/>\n  //         <main>{routes}</main>\n  //         <Footer/>\n  //       </Router>\n  //     </AuthContext.Provider>\n  //   );\n  // };\n\n  let routes;\n\n  if (isLoggedIn) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(Hom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/product\",\n        exact: true,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(Product, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cart\",\n        exact: true,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/products/:category\",\n        exact: true,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(ProductList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/success\",\n        children: /*#__PURE__*/_jsxDEV(Success, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/product/:id\",\n        exact: true,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(Product, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/success\",\n        children: /*#__PURE__*/_jsxDEV(Success, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 1\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Announcement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ruEgRpswEpI83airbCHEQ/ubEtc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/App.js"],"names":["useState","useCallback","BrowserRouter","Router","Routes","Redirect","Route","Switch","Cart","Hom","Login","Product","ProductList","Register","Announcement","Footer","Navbar","Success","useSelector","userSelector","Auth","AuthContext","Logout","App","isLoggedIn","setIsLoggedIn","userId","setUserId","login","uid","logout","routes"],"mappings":"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","sourcesContent":["\nimport {useState ,useCallback}from 'react';\nimport { BrowserRouter as Router ,Routes, Redirect, Route ,Switch} from 'react-router-dom';\nimport './App.css';\nimport Cart from './Pages/Cart';\nimport Hom from './Pages/Hom';\nimport Login from './Pages/Login';\nimport Product from './Pages/Product';\nimport ProductList from './Pages/ProductList';\nimport Register from './Pages/Register';\nimport Announcement from './shared/components/Announcement';\nimport Footer from './shared/components/Footer';\nimport Navbar from './shared/components/Navbar';\nimport Success from './Pages/Success';\nimport {useSelector} from 'react-redux';\nimport { userSelector } from './redux/userRedux';\nimport Auth from './Pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport Logout from './Pages/Logout';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n // const user = false;\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   const login = useCallback(() => {\n//     setIsLoggedIn(true);\n//   }, []);\n\n//   const logout = useCallback(() => {\n//     setIsLoggedIn(false);\n//   }, []);\n//   let routes;\n\n//   if (isLoggedIn) {\n//     routes = (\n//       <Switch>\n//         <Route path=\"/\" exact>\n//           <Hom />\n//         </Route>\n//         <Route path=\"/product\" exact>  <Product /></Route>\n//         <Route path=\"/cart\" exact>  < Cart/></Route>\n//     <Route path=\"/products/:category\" exact>  <ProductList /></Route>\n//      <Route path=\"/products\"><ProductList/></Route>\n//      <Route path=\"/product/:id\" exact>  <Product /></Route>\n//         <Redirect to=\"/\" />\n//       </Switch>\n//     );\n//   } else {\n//     routes = (\n//       <Switch>\n//         <Route path=\"/\" exact>\n//           <Hom />\n//         </Route>\n//         <Route path=\"/auth\">\n//           <Auth />\n//         </Route>\n//         <Redirect to=\"/auth\" />\n//       </Switch>\n//     );\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{ isLoggedIn: isLoggedIn, login: login, logout: logout }}\n//     >\n//       <Router>\n//       <Announcement/>\n//     <Navbar/>\n//         <main>{routes}</main>\n//         <Footer/>\n//       </Router>\n//     </AuthContext.Provider>\n//   );\n// };\n\nlet routes;\nif(isLoggedIn){\nroutes=(\n<Switch>\n      <Route path=\"/\" exact>  <Hom /></Route>\n    <Route path=\"/product\" exact>  <Product /></Route>\n    <Route path=\"/cart\" exact>  < Cart/></Route>\n    <Route path=\"/products/:category\" exact>  <ProductList /></Route>\n    {/* <Route path=\"/products\"><ProductList/></Route> */}\n    <Route path=\"/success\"><Success/></Route>\n    <Route path=\"/product/:id\" exact>  <Product /></Route>\n    <Route path=\"/success\">\n          <Success />\n        </Route>\n</Switch>);\n}else{\nroutes=(<Switch>\n   <Route path=\"/login\"> <Login/></Route>\n        <Route path=\"/register\">\n         <Register />\n        </Route>\n</Switch>);\n\n}\n  return (\n    <AuthContext.Provider value={{isLoggedIn: isLoggedIn, userId: userId, login: login, logout: logout}}>\n<Router>\n      <Announcement/>\n      <Navbar />\n      <main>{routes}</main>\n    <Footer/>\n    </Router>\n  </AuthContext.Provider>\n\n \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}