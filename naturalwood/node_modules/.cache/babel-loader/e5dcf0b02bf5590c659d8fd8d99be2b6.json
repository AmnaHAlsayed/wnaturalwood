{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.quantity += 1;\n      state.products.push(action.payload);\n      state.total += action.payload.price * action.payload.quantity;\n    }\n  },\n  deleteProductStart: state => {\n    state.isFetching = true;\n    state.error = false;\n  },\n  deleteProductSuccess: (state, action) => {\n    state.isFetching = false;\n    state.products.splice(state.products.filter(item => item._id !== action.payload.id), 1);\n  },\n  deleteProductFailure: state => {\n    state.isFetching = false;\n    state.error = true;\n  }\n});\nexport const {\n  addProduct,\n  deleteProductStart,\n  deleteProductSuccess,\n  deleteProductFailure\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/redux/cartRedux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","price","deleteProductStart","isFetching","error","deleteProductSuccess","splice","filter","item","_id","id","deleteProductFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAC,EADA;AAETC,IAAAA,QAAQ,EAAC,CAFA;AAGTC,IAAAA,KAAK,EAAC;AAHG,GAFa;AAO1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACxBD,MAAAA,KAAK,CAACJ,QAAN,IAAgB,CAAhB;AACAI,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACAH,MAAAA,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAuBH,MAAM,CAACE,OAAP,CAAeP,QAArD;AAEH;AANI,GAPiB;AAe1BS,EAAAA,kBAAkB,EAAGL,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACM,UAAN,GAAmB,IAAnB;AACAN,IAAAA,KAAK,CAACO,KAAN,GAAc,KAAd;AACD,GAlBuB;AAmBxBC,EAAAA,oBAAoB,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACvCD,IAAAA,KAAK,CAACM,UAAN,GAAmB,KAAnB;AACAN,IAAAA,KAAK,CAACL,QAAN,CAAec,MAAf,CACET,KAAK,CAACL,QAAN,CAAee,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACE,OAAP,CAAeU,EAA5D,CADF,EAEE,CAFF;AAKD,GA1BuB;AA2BxBC,EAAAA,oBAAoB,EAAGd,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACM,UAAN,GAAmB,KAAnB;AACAN,IAAAA,KAAK,CAACO,KAAN,GAAc,IAAd;AACD;AA9BuB,CAAD,CAA7B;AAgCA,OAAO,MAAM;AAACR,EAAAA,UAAD;AAAcM,EAAAA,kBAAd;AAAiCG,EAAAA,oBAAjC;AAAsDM,EAAAA;AAAtD,IAA8EtB,SAAS,CAACuB,OAA9F;AACP,eAAevB,SAAS,CAACwB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:\"cart\",\r\n    initialState:{\r\n        products:[],\r\n        quantity:0,\r\n        total:0,\r\n    },\r\n    reducers:{\r\n        addProduct:(state ,action)=>{\r\n            state.quantity+=1;\r\n            state.products.push(action.payload);\r\n            state.total += action.payload.price * action.payload.quantity;\r\n\r\n        },\r\n    },\r\n    deleteProductStart: (state) => {\r\n        state.isFetching = true;\r\n        state.error = false;\r\n      },\r\n      deleteProductSuccess: (state, action) => {\r\n        state.isFetching = false;\r\n        state.products.splice(\r\n          state.products.filter((item) => item._id !== action.payload.id),\r\n          1\r\n        );\r\n        \r\n      },\r\n      deleteProductFailure: (state) => {\r\n        state.isFetching = false;\r\n        state.error = true;\r\n      },\r\n});\r\nexport const {addProduct , deleteProductStart,deleteProductSuccess,deleteProductFailure} = cartSlice.actions;\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}