{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.quantity += 1;\n      state.products.push(action.payload);\n      state.total += action.payload.price * action.payload.quantity;\n    },\n    deleteProductSuccess: (state, action) => {\n      const nextproducts = state.products.filter(product => product._id !== action.payload.id);\n      state.products = nextproducts;\n    }\n  }\n});\nexport const {\n  addProduct,\n  deleteProductSuccess\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/redux/cartRedux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","price","deleteProductSuccess","nextproducts","filter","product","_id","id","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAC,EADA;AAETC,IAAAA,QAAQ,EAAC,CAFA;AAGTC,IAAAA,KAAK,EAAC;AAHG,GAFa;AAO1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACxBD,MAAAA,KAAK,CAACJ,QAAN,IAAgB,CAAhB;AACAI,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACAH,MAAAA,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAuBH,MAAM,CAACE,OAAP,CAAeP,QAArD;AAEH,KANI;AASPS,IAAAA,oBAAoB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAGzC,YAAMK,YAAY,GAAKN,KAAK,CAACL,QAAN,CAAeY,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBR,MAAM,CAACE,OAAP,CAAeO,EAAlE,CAAvB;AAEEV,MAAAA,KAAK,CAACL,QAAN,GAAeW,YAAf;AACD;AAfM;AAPiB,CAAD,CAA7B;AAyBA,OAAO,MAAM;AAACP,EAAAA,UAAD;AAAcM,EAAAA;AAAd,IAAsCb,SAAS,CAACmB,OAAtD;AACP,eAAenB,SAAS,CAACoB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:\"cart\",\r\n    initialState:{\r\n        products:[],\r\n        quantity:0,\r\n        total:0,\r\n    },\r\n    reducers:{\r\n        addProduct:(state ,action)=>{\r\n            state.quantity+=1;\r\n            state.products.push(action.payload);\r\n            state.total += action.payload.price * action.payload.quantity;\r\n\r\n        },\r\n   \r\n \r\n      deleteProductSuccess: (state, action) => {\r\n      \r\n     \r\n      const nextproducts=    state.products.filter((product) => product._id !== action.payload.id);\r\n       \r\n        state.products=nextproducts;\r\n      },\r\n  }\r\n});\r\nexport const {addProduct , deleteProductSuccess} = cartSlice.actions;\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}