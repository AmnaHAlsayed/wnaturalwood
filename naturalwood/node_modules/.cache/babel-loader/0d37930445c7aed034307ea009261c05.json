{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\NaturalWood\\\\naturalwood\\\\src\\\\Pages\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react'; //import Card from '../../shared/components/UIElements/Card';\n\nimport Input from '../shared/components/Input';\nimport Button from '../shared/components/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../shared/util/validators';\nimport { useForm } from '../shared/hooks/form-hook';\nimport { AuthContext } from '../shared/context/auth-context';\nimport './Auth.css';\nimport { useHttpClient } from '../shared/hooks/http-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/auth/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/auth/signup', 'POST', JSON.stringify({\n          username: formState.inputs.username.value,\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authentication\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authSubmitHandler,\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"username\",\n        type: \"text\",\n        label: \"Your Name\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a name.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"email\",\n        type: \"email\",\n        label: \"E-Mail\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Please enter a valid email address.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid password, at least 5 characters.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"/cPEAoj/5chXdaORvL/R/PtTN4g=\", false, function () {\n  return [useHttpClient, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Hp/Desktop/NaturalWood/naturalwood/src/Pages/Auth.js"],"names":["React","useState","useContext","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","useHttpClient","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","responseData","JSON","stringify","login","user","id","err","username"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\n//import Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../shared/components/Input';\r\nimport Button from '../shared/components/Button';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../shared/util/validators';\r\nimport { useForm } from '../shared/hooks/form-hook';\r\nimport { AuthContext } from '../shared/context/auth-context';\r\nimport './Auth.css';\r\nimport { useHttpClient } from '../shared/hooks/http-hook';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler =async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          'http://localhost:5000/api/auth/login',\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        auth.login(responseData.user.id);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          'http://localhost:5000/api/auth/signup',\r\n          'POST',\r\n          JSON.stringify({\r\n            username: formState.inputs.username.value,\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n\r\n        auth.login(responseData.user.id);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"authentication\">\r\n      <h2>Login Required</h2>\r\n      <hr />\r\n      <form onSubmit={authSubmitHandler}>\r\n        {!isLoginMode && (\r\n          <Input\r\n            element=\"input\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            label=\"Your Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a name.\"\r\n            onInput={inputHandler}\r\n          />\r\n        )}\r\n        <Input\r\n          element=\"input\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"E-Mail\"\r\n          validators={[VALIDATOR_EMAIL()]}\r\n          errorText=\"Please enter a valid email address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          element=\"input\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid password, at least 5 characters.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n        </Button>\r\n      </form>\r\n      <Button inverse onClick={switchModeHandler}>\r\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}